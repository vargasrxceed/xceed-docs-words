"use strict";(self.webpackChunkxceed_docs_words=self.webpackChunkxceed_docs_words||[]).push([[5728],{1541:(e,r,l)=>{l.r(r),l.d(r,{assets:()=>u,contentTitle:()=>n,default:()=>w,frontMatter:()=>s,metadata:()=>a,toc:()=>h});var t=l(4848),o=l(8453);const s={},n="Set formulas",a={id:"code-snippets/cell/set-formulas",title:"Set formulas",description:"This example demonstrates how to set formulas when using the API from the Xceed Workbooks for .NET.",source:"@site/workbooks/code-snippets/cell/set-formulas.md",sourceDirName:"code-snippets/cell",slug:"/code-snippets/cell/set-formulas",permalink:"/xceed-docs-words/workbooks/code-snippets/cell/set-formulas",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebarsworkbooks",previous:{title:"Set Cell value types",permalink:"/xceed-docs-words/workbooks/code-snippets/cell/set-cell-value-type"},next:{title:"Column",permalink:"/xceed-docs-words/workbooks/category/column"}},u={},h=[];function c(e){const r={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"set-formulas",children:"Set formulas"})}),"\n",(0,t.jsx)(r.p,{children:"This example demonstrates how to set formulas when using the API from the Xceed Workbooks for .NET."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-csharp",children:'    private static void CreateFormattedTable( Worksheet worksheet, string startAddress, string endAddress )\r\n    {\r\n      var table = worksheet.Tables.Add( startAddress, endAddress, TableStyle.TableStyleMedium9 );\r\n      table.ShowFirstColumnFormatting = true;\r\n      table.AutoFilter.ShowFilterButton = false;\r\n      table.Columns[ 1 ].Name = "Values";\r\n    }\r\n    \r\n    public static void SetFormulas()\r\n    {\r\n      using( var workbook = Workbook.Load( "CellData.xlsx" ) )\r\n      {\r\n        // Get the first worksheet. A workbook contains at least 1 worksheet.\r\n        var worksheet = workbook.Worksheets[ 0 ];\r\n\r\n        // Add a title.\r\n        worksheet.Cells[ "B1" ].Value = "Set Formulas";\r\n        worksheet.Cells[ "B1" ].Style.Font = new Font() { Bold = true, Size = 15.5d };\r\n\r\n        worksheet.Cells[ "I4" ].Value = "Stats displayed with Tables:";\r\n        worksheet.Cells[ "I4" ].Style.Font = new Font() { Bold = true };\r\n\r\n        // Set stats and formulas for Jane.\r\n        // Formulas will be calculated when opening saved bookmark with MS Excel or by calling worksheet.CalculateFormulas().\r\n        worksheet.Cells[ "I6" ].Value = "Stats for Jane:";\r\n        worksheet.Cells[ "I7" ].Value = "Total(2011):";\r\n        worksheet.Cells[ "J7" ].Formula = "=SUM( G6, G12, G18, G24 )";\r\n        worksheet.Cells[ "I8" ].Value = "Total(2012):";\r\n        worksheet.Cells[ "J8" ].Formula = "=SUM( G19, G22 )";\r\n        worksheet.Cells[ "I9" ].Value = "Total(2013):";\r\n        worksheet.Cells[ "J9" ].Formula = "=SUM( G8, G17, G20, G23, G26 )";\r\n        worksheet.Cells[ "I10" ].Value = "Total:";\r\n        worksheet.Cells[ "J10" ].Formula = "=SUM( J7:J9 )";\r\n        worksheet.Cells[ "I11" ].Value = "Avg:";\r\n        worksheet.Cells[ "J11" ].Formula = "=AVERAGE( J7:J9 )";\r\n        worksheet.Cells[ "I13" ].Value = "Bonus:";\r\n        worksheet.Cells[ "J13" ].Formula = "=AVERAGE( J11 * 15% )";\r\n\r\n        // Create a table with the Jane stat cells.\r\n        CellSample.CreateFormattedTable( worksheet, "I6", "J13" );\r\n\r\n        // Set stats and formulas for Ashish.\r\n        // Formulas will be calculated when opening saved bookmark with MS Excel or by calling worksheet.CalculateFormulas().\r\n        worksheet.Cells[ "L6" ].Value = "Stats for Ashish:";\r\n        worksheet.Cells[ "L7" ].Value = "Total(2011):";\r\n        worksheet.Cells[ "M7" ].Formula = "=SUM( G15 )";\r\n        worksheet.Cells[ "L8" ].Value = "Total(2012):";\r\n        worksheet.Cells[ "M8" ].Formula = "=SUM( G7, G10, G13, G16 )";\r\n        worksheet.Cells[ "L9" ].Value = "Total(2013):";\r\n        worksheet.Cells[ "M9" ].Formula = "=SUM( 0 )";\r\n        worksheet.Cells[ "L10" ].Value = "Total:";\r\n        worksheet.Cells[ "M10" ].Formula = "=SUM( M7:M9 )";\r\n        worksheet.Cells[ "L11" ].Value = "Avg:";\r\n        worksheet.Cells[ "M11" ].Formula = "=AVERAGE( M7:M9 )";\r\n        worksheet.Cells[ "L13" ].Value = "Bonus:";\r\n        worksheet.Cells[ "M13" ].Formula = "=AVERAGE( M11 * 15% )";\r\n\r\n        // Create a table with the Ashish stat cells.\r\n        CellSample.CreateFormattedTable( worksheet, "L6", "M13" );\r\n\r\n        // Set stats and formulas for John.\r\n        // Formulas will be calculated when opening saved bookmark with MS Excel or by calling worksheet.CalculateFormulas().\r\n        worksheet.Cells[ "O6" ].Value = "Stats for John:";\r\n        worksheet.Cells[ "O7" ].Value = "Total(2011):";\r\n        worksheet.Cells[ "P7" ].Formula = "=SUM( G9, G21 )";\r\n        worksheet.Cells[ "O8" ].Value = "Total(2012):";\r\n        worksheet.Cells[ "P8" ].Formula = "=SUM( G25 )";\r\n        worksheet.Cells[ "O9" ].Value = "Total(2013):";\r\n        worksheet.Cells[ "P9" ].Formula = "=SUM( G11, G14 )";\r\n        worksheet.Cells[ "O10" ].Value = "Total:";\r\n        worksheet.Cells[ "P10" ].Formula = "=SUM( P7:P9 )";\r\n        worksheet.Cells[ "O11" ].Value = "Avg:";\r\n        worksheet.Cells[ "P11" ].Formula = "=AVERAGE( P7:P9 )";\r\n        worksheet.Cells[ "O13" ].Value = "Bonus:";\r\n        worksheet.Cells[ "P13" ].Formula = "=AVERAGE( P11 * 15% )";\r\n\r\n        // Create a table with the John stat cells.\r\n        CellSample.CreateFormattedTable( worksheet, "O6", "P13" );\r\n\r\n        // Set Formatting for columns.\r\n        worksheet.Columns[ "J" ].Style.CustomFormat = "$#,##0";\r\n        worksheet.Columns[ "M" ].Style.CustomFormat = "$#,##0";\r\n        worksheet.Columns[ "P" ].Style.CustomFormat = "$#,##0";\r\n\r\n        // This call will calculate all the formulas of the current worksheet and set the corresponding Cell.Value.\r\n        // It should only be called if the result of calculation is needed before saving the workbook.\r\n        // All formulas will be automatically calculated when opening a workbook with MS Excel.\r\n        // Here we use it because we need the cell.Value\'s width to autoFit the columns.\r\n        worksheet.CalculateFormulas();\r\n\r\n        // AutoFit the columns "I" to "P", from 6th and going down, and make sure the column\'s widths are between 0 and 255.\r\n        worksheet.Columns[ "I","P" ].AutoFit( 0, 255, 5);\r\n\r\n        // Save workbook to disk.\r\n        workbook.SaveAs( CellSample.CellSampleOutputDirectory + @"SetFormulas.xlsx" );\r\n        Console.WriteLine( "\\tCreated: SetFormulas.xlsx\\n" );\r\n      }\r\n    }\n'})})]})}function w(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,r,l)=>{l.d(r,{R:()=>n,x:()=>a});var t=l(6540);const o={},s=t.createContext(o);function n(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:n(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);